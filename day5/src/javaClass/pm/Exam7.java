package javaClass.pm;

public class Exam7 {
	public static void main(String[] args) {
/* 
클래스와 객체
클래스와 객체의 개념을 익히는 것은 세부 문법을 익히는 것만큼 중요!
자바는 객체지향언어로 클래스, 추상클래스, 인터페이스,와 같은 
객체지향적 문법 요소를 사용하여 프로그램을 구성하게 된다.

자바를 제대로 사용하려면 이러한 문법 요소를 먼저 이해라는 것이 아주 중요하다.

1. class의 개념
	객체는 object 사용할 수 있는 실체흫 의미하고 클래스는 그 객체를 만드는 
	설게도 라고 볼수 있다. 따라서 한개의 클래스로 여러개의 객체를 만들수 있다.
	
	왜 class를 사용할까???
	변수 -> 배열 -> 구조체 -> 클래스
	변수 : 다양한 형태의 데이터를 저장하기 위해 각각의 데이터를 저장하는 변수
	배열 : 변수들이 많아지면 관리가 힘듬.. 배열을 사용하면 같은 자요형인 변수들을 
		묶어서 한대의 새로운 자료형으로 관리할 수 있다.
	구조체 : 배열은 같은 자료형만 묶을 수 있다. 
		여러형태의 데이터를 한개의 배열로는 관리 불가!
		배열의 단점을 보안하기 위해 사용되는 자료형!
	클래스 : 구조체는 데이터만 관리할 수 있다.
		여기에 어떤 기능들(method)을 추가한 것이 class!!
	
	절차 지향 / 객체지향
	절차지향 procedeural programing
	객체지향 object oriented programing
	
	객체지향 개념 전에는 대부분 프로그램을 절차지향으로 구현했다.
	절차지향은 순수대로 단계적으로 실행되도록 명령어를 나열하는 방식
	클래스의 등장 후에 객체지향 프로그램밍 방식이 주로 사용된다.
	
	자바에서의 객체 지향 요소
	자바는 프로그램을 객체 단위로 구성해서 상호 연동시킨다.
	자바에서의 객체지향 문법 요소는 크게 클래스, 인터페이스 가 있고
	class는 다시 일반 클래스와 추상클래스로 나눌수있다.
	
	클래스, 인터페이스 또는  일반클래스, 추상클래스, 인터페이스 
	의 객체 지향 문법 요소를 사용
	# 실전에서는 추상클래스를 자주 쓰지는 않음 : 인터페이스를 더 많이 쓰임
	
	class 기본규칙
	1. 클래스명과  파일명은 일치 해야 함
	2. class 밖에 올수 있는 것은 package import 또다른class선언
	3. 접근 지정자 public 응 한개의 .java 파일 안에서
	 	최대 1개의 클래스에 만 붙일수 있다.
	 	
	객체, 인스턴스 라는 표현은 같은 대상을 가르킨다. ( 찍어낸 붕어빵!! )  
	객체와 클래스의 관계를 표현할때 인스턴스라고 하고
	단독으로 그 자체만 표현 할때는 객체
	ex> 인스턴스는 붕어빵 기계로 찍어낸 붕어빵
		객체는 그냥 붕어빵
	  
	객채 : 구현할 대상
	인스턴스 : 구현된 구체적인 실체
	
	A a = new A();
	클래스명 객체명 = new 클래스명([인수]);

*/
	}
}
